generator client {
  provider = "prisma-client-js"
  output   = "../app/generated/prisma"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// =================================================================================
// == Models Utama (Berdasarkan Skema Laravel)
// =================================================================================

// Model 'users' bawaan Laravel, digabungkan dengan field dari 'tbl_user'
model users {
  // Field asli dari Laravel
  id                BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name              String    @db.VarChar(255)
  email             String    @unique(map: "users_email_unique") @db.VarChar(255)
  email_verified_at DateTime? @db.Timestamp(0)
  password          String    @db.VarChar(255)
  remember_token    String?   @db.VarChar(100)
  created_at        DateTime? @db.Timestamp(0)
  updated_at        DateTime? @db.Timestamp(0)

  // Field yang digabungkan dari tbl_user
  username          String?   @unique @db.VarChar(45)
  jk                tbl_user_jk?
  nohp              String?   @db.VarChar(20)
  image             String?   @db.VarChar(255)
  nama_usaha        String?   @db.VarChar(100)
  status_usaha      tbl_user_status_usaha?
  id_level          Int
  id_kategori_usaha Int?

  // Relasi yang dipindahkan dari tbl_user
  tbl_level         tbl_level               @relation(fields: [id_level], references: [id_level], onUpdate: Restrict, map: "fk_users_level")
  tbl_kategori_usaha tbl_kategori_usaha?     @relation(fields: [id_kategori_usaha], references: [id_kategori_usaha], onDelete: Restrict, onUpdate: Restrict, map: "fk_users_kategori_usaha")
  tbl_artikel       tbl_artikel[]
  tbl_product       tbl_product[]

  @@index([id_level])
  @@index([id_kategori_usaha])
}

model artikel_kategoris {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  title      String    @db.VarChar(255)
  slug       String    @unique(map: "artikel_kategoris_slug_unique") @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model artikels {
  id                  BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  author_id           BigInt    @db.UnsignedBigInt
  artikel_kategori_id BigInt    @db.UnsignedBigInt
  title               String    @db.VarChar(255)
  slug                String    @unique(map: "artikels_slug_unique") @db.VarChar(255)
  thumbnail           String    @db.VarChar(255)
  content             String    @db.LongText
  is_featured         Boolean   @default(false)
  created_at          DateTime? @db.Timestamp(0)
  updated_at          DateTime? @db.Timestamp(0)
}

model authors {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  name       String    @db.VarChar(255)
  username   String    @unique(map: "authors_username_unique") @db.VarChar(255)
  avatar     String    @db.VarChar(255)
  bio        String    @db.LongText
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model banners {
  id         BigInt    @id @default(autoincrement()) @db.UnsignedBigInt
  artikel_id BigInt    @db.UnsignedBigInt
  created_at DateTime? @db.Timestamp(0)
  updated_at DateTime? @db.Timestamp(0)
}

model katalogs {
  id            BigInt      @id @default(autoincrement()) @db.UnsignedBigInt
  sub_sektor_id BigInt      @db.UnsignedBigInt
  title         String      @db.VarChar(255)
  slug          String      @unique(map: "katalogs_slug_unique") @db.VarChar(255)
  produk        String      @db.VarChar(255)
  harga         Decimal     @db.Decimal(12, 2)
  content       String      @db.LongText
  no_hp         String?     @db.VarChar(255)
  instagram     String?     @db.VarChar(255)
  shopee        String?     @db.VarChar(255)
  tokopedia     String?     @db.VarChar(255)
  lazada        String?     @db.VarChar(255)
  created_at    DateTime?   @db.Timestamp(0)
  updated_at    DateTime?   @db.Timestamp(0)
  sub_sektors   sub_sektors @relation(fields: [sub_sektor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "katalogs_sub_sektor_id_foreign")

  @@index([sub_sektor_id], map: "katalogs_sub_sektor_id_foreign")
}

model sub_sektors {
  id         BigInt     @id @default(autoincrement()) @db.UnsignedBigInt
  title      String     @db.VarChar(255)
  slug       String     @unique(map: "sub_sektors_slug_unique") @db.VarChar(255)
  created_at DateTime?  @db.Timestamp(0)
  updated_at DateTime?  @db.Timestamp(0)
  katalogs   katalogs[]
}


// =================================================================================
// == Model Tambahan (dari skema kedua, diintegrasikan)
// =================================================================================

model tbl_artikel {
  id_artikel        Int       @id @default(autoincrement())
  judul             String    @db.VarChar(150)
  gambar            String?   @db.VarChar(100)
  deskripsi_singkat  String?   @db.Text
  isi_lengkap       String?   @db.LongText
  tanggal_upload    DateTime  @db.Date
  id_user           BigInt?   @db.UnsignedBigInt // Tipe data diubah ke BigInt untuk mencocokkan users.id
  users             users?    @relation(fields: [id_user], references: [id], onDelete: Restrict, onUpdate: Restrict, map: "fk_artikel_user") // Relasi diubah ke model 'users'

  @@index([id_user])
}

model tbl_level {
  id_level      Int             @id @default(autoincrement())
  level         String?         @db.VarChar(25)
  users         users[] // Relasi diubah ke model 'users'
  tbl_user_temp tbl_user_temp[]
}

model tbl_olshop_link {
  id_link       Int         @id @default(autoincrement())
  id_produk     Int
  nama_platform String?     @db.VarChar(50)
  url           String      @db.Text
  tbl_product   tbl_product @relation(fields: [id_produk], references: [id_produk], onDelete: Cascade, map: "fk_produk_olshop")

  @@index([id_produk])
}

model tbl_subsektor {
  id_sub     Int     @id @default(autoincrement())
  sub_sektor String? @db.VarChar(25)
}

model tbl_user_temp {
  id                       Int                          @id @default(autoincrement())
  nama_user                String                       @db.VarChar(35)
  username                 String                       @unique(map: "username") @db.VarChar(45)
  email                    String                       @unique(map: "email") @db.VarChar(100)
  password                 String                       @db.VarChar(255)
  jk                       tbl_user_temp_jk
  nohp                     String?                      @db.VarChar(20)
  id_level                 Int
  verificationToken        String                       @unique(map: "verificationToken") @db.VarChar(255)
  createdAt                DateTime                     @default(now()) @db.DateTime(0)
  resetPasswordToken       String?                      @unique(map: "resetPasswordToken") @db.VarChar(255)
  resetPasswordTokenExpiry DateTime?                    @db.DateTime(0)
  verificationTokenExpiry  DateTime?                    @db.DateTime(0)
  nama_usaha               String?                      @db.VarChar(100)
  status_usaha             tbl_user_temp_status_usaha?
  id_kategori_usaha        Int?
  tbl_kategori_usaha       tbl_kategori_usaha?          @relation(fields: [id_kategori_usaha], references: [id_kategori_usaha], onDelete: Restrict, onUpdate: Restrict, map: "fk_user_temp_kategori_usaha")
  tbl_level                tbl_level                    @relation(fields: [id_level], references: [id_level], onDelete: NoAction, onUpdate: Restrict, map: "fk_user_temp_level")

  @@index([id_kategori_usaha])
  @@index([id_level])
}

model tbl_kategori_usaha {
  id_kategori_usaha Int             @id @default(autoincrement())
  nama_kategori     String          @unique(map: "nama_kategori_UNIQUE") @db.VarChar(50)
  image             String?         @db.VarChar(255)
  tbl_product       tbl_product[]
  users             users[] // Relasi diubah ke model 'users'
  tbl_user_temp     tbl_user_temp[]
}

model tbl_product {
  id_produk            Int                       @id @default(autoincrement())
  nama_pelaku          String?                   @db.VarChar(35)
  nama_produk          String                    @db.VarChar(50)
  deskripsi            String                    @db.VarChar(500)
  harga                Float
  stok                 Int
  gambar               String                    @db.VarChar(255)
  nohp                 String                    @db.VarChar(12)
  tgl_upload           DateTime                  @default(now()) @db.Timestamp(0)
  id_user              BigInt?                   @db.UnsignedBigInt // Tipe data diubah ke BigInt
  id_kategori_usaha    Int?
  status_produk        tbl_product_status_produk @default(pending)
  tbl_olshop_link      tbl_olshop_link[]
  tbl_kategori_usaha   tbl_kategori_usaha?       @relation(fields: [id_kategori_usaha], references: [id_kategori_usaha], onDelete: Restrict, onUpdate: Restrict, map: "fk_product_kategori_usaha")
  users                users?                    @relation(fields: [id_user], references: [id], onUpdate: Restrict, map: "fk_umkm_user") // Relasi diubah ke model 'users'

  @@index([id_user])
  @@index([id_kategori_usaha])
}


// =================================================================================
// == Model Utilitas Umum (Bawaan Laravel)
// =================================================================================

model cache {
  key        String @id @db.VarChar(255)
  value      String @db.MediumText
  expiration Int
}

model cache_locks {
  key        String @id @db.VarChar(255)
  owner      String @db.VarChar(255)
  expiration Int
}

model failed_jobs {
  id         BigInt   @id @default(autoincrement()) @db.UnsignedBigInt
  uuid       String   @unique(map: "failed_jobs_uuid_unique") @db.VarChar(255)
  connection String   @db.Text
  queue      String   @db.Text
  payload    String   @db.LongText
  exception  String   @db.LongText
  failed_at  DateTime @default(now()) @db.Timestamp(0)
}

model job_batches {
  id             String  @id @db.VarChar(255)
  name           String  @db.VarChar(255)
  total_jobs     Int
  pending_jobs   Int
  failed_jobs    Int
  failed_job_ids String  @db.LongText
  options        String? @db.MediumText
  cancelled_at   Int?
  created_at     Int
  finished_at    Int?
}

model jobs {
  id           BigInt  @id @default(autoincrement()) @db.UnsignedBigInt
  queue        String  @db.VarChar(255)
  payload      String  @db.LongText
  attempts     Int     @db.UnsignedTinyInt
  reserved_at  Int?    @db.UnsignedInt
  available_at Int     @db.UnsignedInt
  created_at   Int     @db.UnsignedInt

  @@index([queue], map: "jobs_queue_index")
}

model migrations {
  id        Int    @id @default(autoincrement()) @db.UnsignedInt
  migration String @db.VarChar(255)
  batch     Int
}

model password_reset_tokens {
  email      String    @id @db.VarChar(255)
  token      String    @db.VarChar(255)
  created_at DateTime? @db.Timestamp(0)
}

model sessions {
  id            String  @id @db.VarChar(255)
  user_id       BigInt? @db.UnsignedBigInt
  ip_address    String? @db.VarChar(45)
  user_agent    String? @db.Text
  payload       String  @db.LongText
  last_activity Int

  @@index([last_activity], map: "sessions_last_activity_index")
  @@index([user_id], map: "sessions_user_id_index")
}


// =================================================================================
// == Enums
// =================================================================================

enum tbl_user_jk {
  Laki_laki @map("Laki-laki")
  Perempuan
}

enum tbl_user_temp_jk {
  Laki_laki @map("Laki-laki")
  Perempuan
}

enum tbl_user_status_usaha {
  BARU
  SUDAH_LAMA
}

enum tbl_user_temp_status_usaha {
  BARU
  SUDAH_LAMA
}

enum tbl_product_status_produk {
  disetujui
  pending
  ditolak
  tidak_aktif @map("tidak aktif")
}
